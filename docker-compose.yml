version: '3.9'
services:
  backend-fastapi:
    build: 
      context: ./backend/authentication-fastapi
      target: ${TARGET:-dev}
    tty: true
    stdin_open: true
    image: sample_authentication_backend_fastapi:${TAG:-dev}
    container_name: sample_authentication_backend_fastapi
    volumes:
      - ./backend/authentication-fastapi/app:/opt/app
      - sample-authentication-pip-package-vol:/opt/pypy/lib/pypy3.9/site-packages:ro
    ports:
      - "8008:8000"
    depends_on:
      - rdb
      - test-rdb
    networks:
      - sample-authentication-back-tier
    entrypoint: /usr/bin/tini -- uvicorn
    command: main:app --reload --host 0.0.0.0
  
  frontend-nuxt3:
    build:
      context: ./frontend/authentication-nuxt3
      target: ${TARGET:-dev}
    tty: true
    stdin_open: true
    image: sample_authentication_frontend_nuxt3:${TAG:-dev}
    container_name: sample_authentication_frontend_nuxt3
    volumes:
      - ./frontend/authentication-nuxt3/app:/app
    ports:
      - "3001:3000" ## nuxt
      - "6007:6006" ## storybook
      - "24679:24678" ## リロードエラーの対策
    networks:
      - sample-authentication-front-tier
    entrypoint: /sbin/tini -- npm
    command: run dev

  proxy-nginx:
    build:
      context: ./proxy/nginx
      target: ${TARGET:-dev}
    stdin_open: true
    tty: true
    image: sample_authentication_proxy_nginx:${TAG:-dev}
    container_name: sample_authentication_proxy_nginx
    ports:
      - "1025:1025"
    networks:
      - sample-authentication-front-tier
      - sample-authentication-back-tier
    depends_on:
      - backend-fastapi
      - frontend-nuxt3
    entrypoint: /sbin/tini -- nginx
    command: -g "daemon off;"
    
  rdb:
    build:
      context: ./backend/authentication-fastapi
      dockerfile: Dockerfile.rdb
    image: sample_authentication_rdb_mysql8:dev
    container_name: sample_authentication_rdb_mysql8
    tty: true
    stdin_open: true
    ports:
      - "33308:3306"
    platform: linux/x86_64
    environment: 
      MYSQL_DATABASE: sample-authentication
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: devuser
      MYSQL_PASSWORD: devsecret
    volumes:
      - sample-authentication-dev-mysql-vol:/var/lib/mysql
    networks:
      - sample-authentication-back-tier

  test-rdb:
    build:
      context: ./backend/authentication-fastapi
      dockerfile: Dockerfile.rdb
    image: sample_authentication_test_rdb_mysql8:dev
    container_name: sample_authentication_test_rdb_mysql8
    tty: true
    stdin_open: true
    ports:
      - "33309:3306"
    platform: linux/x86_64
    environment: 
      MYSQL_DATABASE: sample-authentication
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testsecret
    volumes:
      - sample-authentication-test-mysql-vol:/var/lib/mysql
    networks:
      - sample-authentication-back-tier

volumes:
  sample-authentication-pip-package-vol:
  sample-authentication-dev-mysql-vol:
  sample-authentication-test-mysql-vol:

networks:
  sample-authentication-front-tier:
    driver: bridge
    name: sample-authentication-front-fier
  sample-authentication-back-tier:
    driver: bridge
    name: sample-authentication-back-tier